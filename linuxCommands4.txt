-------------------------------------------------------------------------------------
			Working with Text Editors in Linux
=====================================================================================



The default editor that comes with the UNIX operating system 
is called vi (visual editor). 

Using vi editor, we can edit an existing file or create a new file from scratch.

We can also use this editor to just read a text file.


Modes of Operation in vi editor 
+++++++++++++++++++++++++++++++++
There are three modes of operation in vi:

1) command mode
2) insert mode
3) escape mode

Command Mode: 
---------------
When vi starts up, it is in Command Mode. This mode is where vi interprets any characters we type as commands and thus does not display them in the window

This mode allows us to move through a file, and to delete, copy, or paste a piece of text.

To enter into Command Mode from any other mode, it requires pressing the [Esc] key. If we press [Esc] when we are already in Command Mode, then vi will beep or flash the screen.

Insert mode: 
--------------
This mode enables you to insert text into the file. 

Everything thatâ€™s typed in this mode is interpreted as input and finally, it is put in the file. 

The vi always starts in command mode. To enter text, you must be in insert mode.

To come in insert mode you simply type i. 
 
To get out of insert mode, press the Esc key, which will put you back into command mode.

Last Line Mode(Escape Mode): 
-----------------------------
Line Mode is invoked by typing a colon [:], while vi is in Command Mode. 

The cursor will jump to the last line of the screen and vi will wait for a command. 

This mode enables you to perform tasks such as saving files, executing commands.

There are following way you can start using vi editor :

Commands and their Description
---------------------------------
vi filename: Creates a new file if it already not exist, otherwise opens existing file.
vi -R filename : Opens an existing file in read only mode.
view filename : Opens an existing file in read only mode.


vi f1.txt

=> After making changes if we don't want to save those changes then execute :q!

Moving within a File(Navigation):
-----------------------------------
To move around within a file without affecting text must be in command mode (press Esc twice). Here are some of the commands can be used to move around one character at a time.

Commands and their Description
---------------------------------
k : Moves the cursor up one line.
j : Moves the cursor down one line.
h : Moves the cursor to the left one character position.
l : Moves the cursor to the right one character position.
0 or | : Positions cursor at beginning of line.
$ : Positions cursor at end of line.
W : Positions cursor to the next word.
B : Positions cursor to previous word.
( : Positions cursor to beginning of current sentence.
) : Positions cursor to beginning of next sentence.
H : Move to top of screen.
nH : Moves to nth line from the top of the screen.
M : Move to middle of screen.
L : Move to bottom of screen.
nL : Moves to nth line from the bottom of the screen.
colon along with x : Colon followed by a number would position the cursor on line number represented by x.


Usecase
-------
-> We will use 'vi' editor to perform below activities

a) To edit config files of our application
b) To edit shell script files





Working with SED command
------------------------
SED command in UNIX stands for stream editor and it can perform lots of functions on file like searching, find and replace, insertion or deletion.

Though most common use of SED command in UNIX is for substitution or for find and replace. 

By using SED you can edit files even without opening them, which is much quicker way to find and replace something in file, than first opening that file in VI Editor and then changing it.

SED is a powerful text stream editor. Can do insertion, deletion, search and replace(substitution).

SED command in unix supports regular expression which allows it perform complex pattern matching.

Example:
--------
$ cat > myfile.txt
unix is great os. unix is opensource. unix is free os.
learn operating system.
unix linux which one you choose.
unix is easy to learn.unix is a multiuser os. Learn unix. unix is a powerful.

Replacing or substituting string : 
----------------------------------
Sed command is mostly used to replace the text in a file. The below simple sed command replaces the word â€œunixâ€ with â€œlinuxâ€ in the file

$sed 's/unix/linux/' myfile.txt

By default, the sed command replaces the first occurrence of the pattern in each line and it wonâ€™t replace the second, thirdâ€¦occurrence in the line.

Replacing the nth occurrence of a pattern in a line : 
---------------------------------------------------
Use the /1, /2 etc flags to replace the first, second occurrence of a pattern in a line. The below command replaces the second occurrence of the word â€œunixâ€ with â€œlinuxâ€ in a line.

$sed 's/unix/linux/2' geekfile.txt

Replacing all the occurrence of the pattern in a line : 
----------------------------------------------
The substitute flag /g (global replacement) specifies the sed command to replace all the occurrences of the string in the line.

$ sed 's/unix/linux/g' myfile.txt

Deleting lines from a particular file 
-------------------------------------
SED command can also be used for deleting lines from a particular file. SED command is used for performing deletion operation without even opening the file

To Delete a particular line say n in this example
----------------------------------------------------
$ sed '5d' myfile.txt

To Delete a last line
-----------------------
$ sed '$d' myfile.txt


To Delete from nth to last line
---------------------------------
$ sed '12,$d' myfile.txt


Note: By default SED command changes will not store in file.

=> To make SED command changes to file permanently we will use '-i' optionn.

	$ sed -i 's/unix/linux/g' myfile.txt  

Note: With above command 'unix' keyword will be replaced with 'linux' keyword in the file permanently.
