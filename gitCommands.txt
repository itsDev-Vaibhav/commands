			GITHUB NOTES
-+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+
-+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+
===>.......===>....>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>....===>.......===>..


-+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+
+ Whenever you start working on any functionality it's better to create  +
+ a child branch for that branch so that previous code will not break.	 +
-+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+


		to login to git
--------------------------------------------

git config --global user.email <email>

git config --global user.name <name>

==> to set your username and email globally.

to change the editor in your git.

git config --global core.editor "nano"



to store the project source code to git repo is a multi step process

1..to initialize the git repo
--------------------------------------------
-> in the project folder
	
	-> git init

		==> it will initialize the repository and create a .git folder.


2..add files the git repo
--------------------------------------------
-> in the project folder
	
	-> git add <file>
eg	-> git add . - . means all files.	
	
		==> is is used to add files to staging area.
		==> staging area - files which are eligible to push/commit.


-+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+--+-+-+-+-+-+-+-

	==> git rm --cached <file> / git restore --stagged <file>	
		=> to unstagged the stagged file.

rm => to remove the files to stagging to unstagging.
restore => to remove the files to stagging to unstagging / discard changes in working directory



3..commit 
--------------------------------------------
-> in the project folder
	
	-> git commit -m <message>
	
		==> is is used to add all the files to local repo.
 
4..branch 
--------------------------------------------
-> to specifying the branch name
	
	-> git branch -M <branch name>
	
		==> is is used to specify the branch name in repository.
  
 



4..create connection to cloud repo
--------------------------------------------
-> to create connection b/w cloud repository and local repository
	
	-> git remote add origin <url>
	
		==> is is used to add the cloud repo's url to the local repo.
		==> this commands will be used to add url only first time when 
		    we are initializing our repo.  


 
4..push 
--------------------------------------------
-> to push the code from local repo to cloud repo.
	
	-> git push -u origin main
	
		==> it will push the code to the cloud repository.


==> git status -- to check which files are changed.
==> git log -- to check commit history in the source code.
==> git clone -- to download the existing repository from remote location.

==> git pull -- to get latest change from the remote repository. 
-------------------------------------------------------------------
-> it is a very dangerous command in git.
-> Always you need to pull the repository before starting your work. 




4.. git stash / stash apply command
--------------------------------------------

git stash
==================

git stash command is basically used to store your changes into a temporary store.

// my side..
==> After doing some changes, to make working tree clean by storing our changes to temporary storage we will use 'git stash' option.
 
use case : once you are doing changes but in mid of your task you got an email to fix 
	   a high priority bug and you want to work on it. but where you will store
	   these changes. so use git 'stash' commands.
	   
	   
1.. before start working on high prioprity task we have to perform git stash option.	   

git stash apply
==================

==> after completing your high priority work now you want your stashed code back to work.
	we are going to use 'git stash apply' option.
	
git stash list => provide the list of previous stashed code with index.
		  if we want to get restore our code from any specific stash index then
		  ===>>> git stash apply {stash index}
		  
